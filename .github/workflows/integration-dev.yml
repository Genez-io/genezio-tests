name: Integration Tests Dev

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      # TODO Restore this before merge, using just for testing
        with:
          ref: improv/add_multiple_runners
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v4
      - uses: actions/checkout@v3
        with:
          repository: 'Genez-io/genezio'
          ref: 'dev'
          path: genezio
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: genezio/package-lock.json
      - run: cd genezio && npm install && npm run install-locally-dev
      - run: python test_todo_list_ts.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_create_list_delete.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_hello.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_todo_list.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_webhooks.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_unauthenticated.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      # binary dependency needs to install the node_modules corresponding to the machine arch
      - run: npm install
        working-directory: projects/binary-dependency/server
      - run: python test_binary_dependency.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_new_project.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_cron.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_swift_sdk.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_js_sdk.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_ts_sdk.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_python_sdk.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_dart_sdk.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - run: python test_frontend.py
        env:
          GENEZIO_TOKEN: ${{ secrets.GENEZIO_TOKEN_DEV }}
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C04QR0X8CQ2
          status: SUCCESS
          color: good
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATIONS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: C04QR0X8CQ2
          status: FAILED
          color: danger
